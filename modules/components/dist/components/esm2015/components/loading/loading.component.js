import { Component, ViewChild, Input } from '@angular/core';
export class LoadingComponent {
    constructor() {
        this.showText = true;
    }
    ngAfterViewInit() {
        const path = this.wave.nativeElement;
        // eslint-disable-next-line no-loss-of-precision
        const m = 0.512286623256592433;
        const w = 90;
        const h = 60;
        const a = h / 4;
        const y = h / 2;
        const pathData = [
            'M', w * 0, y + a / 2,
            'c', a * m, 0, -(1 - a) * m, -a, a, -a,
            's', -(1 - a) * m, a, a, a,
            's', -(1 - a) * m, -a, a, -a,
            's', -(1 - a) * m, a, a, a,
            's', -(1 - a) * m, -a, a, -a,
            's', -(1 - a) * m, a, a, a,
            's', -(1 - a) * m, -a, a, -a,
            's', -(1 - a) * m, a, a, a,
            's', -(1 - a) * m, -a, a, -a,
            's', -(1 - a) * m, a, a, a,
            's', -(1 - a) * m, -a, a, -a,
            's', -(1 - a) * m, a, a, a,
            's', -(1 - a) * m, -a, a, -a,
            's', -(1 - a) * m, a, a, a,
            's', -(1 - a) * m, -a, a, -a
        ].join(' ');
        path.setAttribute('d', pathData);
    }
}
LoadingComponent.decorators = [
    { type: Component, args: [{
                selector: 'eqm-loading',
                template: "<div class=\"loader\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" \n      width=\"80px\" height=\"60px\"\n      viewBox=\"5 0 80 60\">\n    <path id=\"wave\" #wave\n        fill=\"none\" \n        stroke=\"#4f8d71\" \n        stroke-width=\"4\"\n        stroke-linecap=\"round\">\n    </path>\n  </svg>\n</div>\n<eqm-label *ngIf=\"showText\">{{text || 'Loading'}}</eqm-label>",
                styles: [":host{display:flex;flex-direction:column;justify-content:center;align-items:center}.loader{height:60px;width:80px}.loader #wave{stroke-dasharray:0 16 101 16;-webkit-animation:animateWave 2.4s linear infinite;animation:animateWave 2.4s linear infinite}@-webkit-keyframes animateWave{0%{stroke-dashoffset:0;transform:translateZ(0)}to{stroke-dashoffset:-133;transform:translate3d(-90px,0,0)}}@keyframes animateWave{0%{stroke-dashoffset:0;transform:translateZ(0)}to{stroke-dashoffset:-133;transform:translate3d(-90px,0,0)}}"]
            },] }
];
LoadingComponent.propDecorators = {
    wave: [{ type: ViewChild, args: ['wave', { static: true },] }],
    text: [{ type: Input }],
    showText: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb21wb25lbnRzL3NyYy9jb21wb25lbnRzL2xvYWRpbmcvbG9hZGluZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQTZCLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQTtBQU90RixNQUFNLE9BQU8sZ0JBQWdCO0lBTDdCO1FBUVcsYUFBUSxHQUFHLElBQUksQ0FBQTtJQWlDMUIsQ0FBQztJQS9CQyxlQUFlO1FBQ2IsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUE7UUFDcEMsZ0RBQWdEO1FBQ2hELE1BQU0sQ0FBQyxHQUFHLG9CQUFvQixDQUFBO1FBQzlCLE1BQU0sQ0FBQyxHQUFHLEVBQUUsQ0FBQTtRQUNaLE1BQU0sQ0FBQyxHQUFHLEVBQUUsQ0FBQTtRQUVaLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUE7UUFDZixNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFBO1FBRWYsTUFBTSxRQUFRLEdBQUc7WUFDZixHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUM7WUFDckIsR0FBRyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDdEMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztZQUMxQixHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUM1QixHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO1lBQzFCLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQzVCLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUM7WUFDMUIsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDNUIsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztZQUMxQixHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUM1QixHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO1lBQzFCLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQzVCLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUM7WUFDMUIsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDNUIsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztZQUMxQixHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUM3QixDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQTtRQUVYLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFBO0lBQ2xDLENBQUM7OztZQXhDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGFBQWE7Z0JBQ3ZCLHFZQUF1Qzs7YUFFeEM7OzttQkFFRSxTQUFTLFNBQUMsTUFBTSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTttQkFDbEMsS0FBSzt1QkFDTCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3Q2hpbGQsIEVsZW1lbnRSZWYsIEFmdGVyVmlld0luaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSdcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZXFtLWxvYWRpbmcnLFxuICB0ZW1wbGF0ZVVybDogJy4vbG9hZGluZy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWyAnLi9sb2FkaW5nLmNvbXBvbmVudC5zY3NzJyBdXG59KVxuZXhwb3J0IGNsYXNzIExvYWRpbmdDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgQFZpZXdDaGlsZCgnd2F2ZScsIHsgc3RhdGljOiB0cnVlIH0pIHdhdmUhOiBFbGVtZW50UmVmXG4gIEBJbnB1dCgpIHRleHQ/OiBzdHJpbmdcbiAgQElucHV0KCkgc2hvd1RleHQgPSB0cnVlXG5cbiAgbmdBZnRlclZpZXdJbml0ICgpIHtcbiAgICBjb25zdCBwYXRoID0gdGhpcy53YXZlLm5hdGl2ZUVsZW1lbnRcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbG9zcy1vZi1wcmVjaXNpb25cbiAgICBjb25zdCBtID0gMC41MTIyODY2MjMyNTY1OTI0MzNcbiAgICBjb25zdCB3ID0gOTBcbiAgICBjb25zdCBoID0gNjBcblxuICAgIGNvbnN0IGEgPSBoIC8gNFxuICAgIGNvbnN0IHkgPSBoIC8gMlxuXG4gICAgY29uc3QgcGF0aERhdGEgPSBbXG4gICAgICAnTScsIHcgKiAwLCB5ICsgYSAvIDIsXG4gICAgICAnYycsIGEgKiBtLCAwLCAtKDEgLSBhKSAqIG0sIC1hLCBhLCAtYSxcbiAgICAgICdzJywgLSgxIC0gYSkgKiBtLCBhLCBhLCBhLFxuICAgICAgJ3MnLCAtKDEgLSBhKSAqIG0sIC1hLCBhLCAtYSxcbiAgICAgICdzJywgLSgxIC0gYSkgKiBtLCBhLCBhLCBhLFxuICAgICAgJ3MnLCAtKDEgLSBhKSAqIG0sIC1hLCBhLCAtYSxcbiAgICAgICdzJywgLSgxIC0gYSkgKiBtLCBhLCBhLCBhLFxuICAgICAgJ3MnLCAtKDEgLSBhKSAqIG0sIC1hLCBhLCAtYSxcbiAgICAgICdzJywgLSgxIC0gYSkgKiBtLCBhLCBhLCBhLFxuICAgICAgJ3MnLCAtKDEgLSBhKSAqIG0sIC1hLCBhLCAtYSxcbiAgICAgICdzJywgLSgxIC0gYSkgKiBtLCBhLCBhLCBhLFxuICAgICAgJ3MnLCAtKDEgLSBhKSAqIG0sIC1hLCBhLCAtYSxcbiAgICAgICdzJywgLSgxIC0gYSkgKiBtLCBhLCBhLCBhLFxuICAgICAgJ3MnLCAtKDEgLSBhKSAqIG0sIC1hLCBhLCAtYSxcbiAgICAgICdzJywgLSgxIC0gYSkgKiBtLCBhLCBhLCBhLFxuICAgICAgJ3MnLCAtKDEgLSBhKSAqIG0sIC1hLCBhLCAtYVxuICAgIF0uam9pbignICcpXG5cbiAgICBwYXRoLnNldEF0dHJpYnV0ZSgnZCcsIHBhdGhEYXRhKVxuICB9XG59XG4iXX0=